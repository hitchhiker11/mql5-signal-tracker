version: '3.8'

services:
  # Backend service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: meta_trader_backend
    restart: always
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_key_here}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER:-meta_trader_user}
      - DB_PASSWORD=${DB_PASSWORD:-meta_trader_password}
      - DB_NAME=${DB_NAME:-meta_trader_db}
      - ADMIN_DEFAULT_PASSWORD=${ADMIN_DEFAULT_PASSWORD:-admin123}
      - HOST=0.0.0.0  # Explicitly listen on all interfaces
    volumes:
      - backend_cache:/app/cache
      - backend_logs:/app/logs
    depends_on:
      - postgres
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: meta_trader_postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_USER:-meta_trader_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-meta_trader_password}
      - POSTGRES_DB=${DB_NAME:-meta_trader_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Initialize database with schema if needed
      - ./database/schema.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-meta_trader_user} -d ${DB_NAME:-meta_trader_db}"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

# Define volumes
volumes:
  backend_cache:
    name: meta_trader_backend_cache
  backend_logs:
    name: meta_trader_backend_logs
  postgres_data:
    name: meta_trader_postgres_data

# Define network
networks:
  app_network:
    driver: bridge
    name: meta_trader_network 