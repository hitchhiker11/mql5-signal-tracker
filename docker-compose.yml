version: '3.8'

services:
  # Сервис бэкенда
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: meta_trader_backend
    restart: always
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - JWT_SECRET=your_jwt_secret_key_here
      - DATABASE_URL=mongodb://mongo:27017/meta_trader
      - HOST=0.0.0.0
    volumes:
      - backend_cache:/app/cache
      - backend_logs:/app/logs
    depends_on:
      - mongo
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Сервис фронтенда
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=http://109.73.192.193:3001
    container_name: meta_trader_frontend
    restart: always
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # База данных MongoDB
  mongo:
    image: mongo:latest
    container_name: meta_trader_mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - app_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

# Определение томов
volumes:
  backend_cache:
    name: meta_trader_backend_cache
  backend_logs:
    name: meta_trader_backend_logs
  mongo_data:
    name: meta_trader_mongo_data

# Определение сети
networks:
  app_network:
    driver: bridge
    name: meta_trader_network 